#Написать программу сложения и умножения двух шестнадцатеричных чисел.
#При этом каждое число представляется как массив,
#элементы которого — цифры числа. Например, пользователь ввёл A2 и C4F.
#Нужно сохранить их как [‘A’, ‘2’] и [‘C’, ‘4’, ‘F’] соответственно.
#Сумма чисел из примера: [‘C’, ‘F’, ‘1’],
#произведение - [‘7’, ‘C’, ‘9’, ‘F’, ‘E’].
#from collections import namedtuple
##Num_16 = namedtuple ('Nam_16','0, 1 , 2 , 3 , 4, 5, 6, 7, 8,9,a,b,c,d,e,f,10')
#num_10 = Nam_16(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16)
#ch_1 = input ('Введите первое шеснадцатиричное число',)
#
from collections import Counter
from collections import deque
tab_1 = dict ({'0':0,'1':1,'2':2,'3':3,'4':4,'5':5,'6':6,'7':7,'8':8,'9':9,'a':10,'b':11,'c':12,'d':13,'e':14,'f':15,'10':16})
tab_2 = dict ({0:0,1:1,2:2,3:3,4:4,5:5,6:6,7:7,8:8,9:9,10:'a',11: 'b',12:'c',13:'d',14:'e',15:'f',16:10})

ch_1 = deque(input ('Введите первое шеснадцатиричное число ' ,))
ch_2 = deque(input ('Введите второе шеснадцатиричное число ' ,))
list1 = []
list2 = []
for char in   ch_1:
   list1.append(tab_1[char]) # Добавляем в первый список каждое 16-ричное значение 1-го числа в 10-ричном виде
#print (list1)
for char in   ch_2:
   list2.append(tab_1[char]) # Добавляем во второй список каждое 16-ричное значение 2-го числа в 10-ричном виде
#print (list2)
dl1 = len(list1)
dl2 = len(list2)
#print (dl1, dl2)
i = 0
ch_1_10 = 0
ch_2_10 = 0
for char in list1: # Приводим первое 16-ричное число к 10-ричному виду
    dl1 = dl1 - 1
    ch_1_10 =  ch_1_10 + int(char) * (16 ** (dl1))
    
print ('Первое числов 10-ричной системе', ch_1_10)
                                    
for char in list2: # Приводим второй 16-ричное число к 10 -ричному виду
    dl2 = dl2 - 1
    ch_2_10 = ch_2_10 + int(char) * (16 ** (dl2))
print ('Второе число в 10-ричной системе', ch_2_10)
summ1 = ch_1_10 + ch_2_10 # Посчитали сумму чисел в 10-ричном виде
mult1 = ch_1_10 * ch_2_10 # Посчитали произведение чисел в 10-ричном виде
print('Сумма чисел в 10-чной системе ' , summ1)
print('Произведение чисел в 10-чной системе ' , mult1)
summ_16 = deque()
mult_16 = deque()
ost_d1 = summ1
ost_d2 = mult1
#print (ost_d2)

while summ1 > 0:
    ost_d1 = summ1 % 16
    summ1 = summ1 // 16
    summ_16.append(ost_d1)
summ_16.reverse() # Приводим сумму к 16-ричному виду. Делим последовательно на 16
#print (summ_16)

while mult1 > 0:
    ost_d2 = mult1 % 16
    mult1 = mult1 // 16
    mult_16.append(ost_d2)
    
mult_16.reverse() # Приводим произведение к 16-ричному виду. Делим последовательно на 16
#print(mult_16)
list_summ = []
list_mult = []
for char in summ_16:
    list_summ.append(tab_2[char]) # Находим для каждого элемента  эквивалент в 16-ричной таблице обозначений
for char in mult_16:
    list_mult.append(tab_2[char]) # Находим для каждого элемента эквивалент в 16-ричной таблице обозначений
print('Сумма чисел в 16-ричной системе ', list_summ)
print('Произведение чисел в 16-ричной системе ', list_mult)



